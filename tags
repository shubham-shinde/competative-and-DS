!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	0	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ll	hashcode2020/program2.cpp	/^typedef long long ll;$/;"	t	file:
binary_search	hashcode2020/program2.cpp	/^ll binary_search(vector<ll> &list, ll num, ll s, ll e) {$/;"	f
main	hashcode2020/program2.cpp	/^int main() {$/;"	f
ll	hashcode2020/program3.cpp	/^typedef long long ll;$/;"	t	file:
M	hashcode2020/program3.cpp	/^ll M;$/;"	v
dpLen	hashcode2020/program3.cpp	/^ll dpLen = 1000001;$/;"	v
binary_search	hashcode2020/program3.cpp	/^ll binary_search(vector<ll> &list, ll num, ll s, ll e) {$/;"	f
create_count_dp	hashcode2020/program3.cpp	/^vector<vector<ll>> create_count_dp(vector<vector<ll>> c_slices) {$/;"	f
test_for_max	hashcode2020/program3.cpp	/^pair<ll, vector<ll>> test_for_max(ll num, vector<vector<ll>> dp) {$/;"	f
makeCount	hashcode2020/program3.cpp	/^vector<vector<ll>> makeCount(vector<ll> slices) {$/;"	f
create_search_vector	hashcode2020/program3.cpp	/^vector<ll> create_search_vector(vector<vector<ll>> slices) {$/;"	f
find_correct_index	hashcode2020/program3.cpp	/^ll find_correct_index(vector<vector<ll>> slices, ll index) {$/;"	f
find_num_position	hashcode2020/program3.cpp	/^vector<ll> find_num_position(vector<vector<ll>> counted_slices, vector<ll> required) {$/;"	f
search_max	hashcode2020/program3.cpp	/^pair<ll, vector<ll>> search_max(vector<vector<ll>> counted_slices, ll end) {$/;"	f
CalculateMaximumUsingBinarySearch	hashcode2020/program3.cpp	/^vector<ll> CalculateMaximumUsingBinarySearch(ll Ms, ll N, vector<ll> slices) {$/;"	f
CalculateMaximumUsingDynamicProgramming	hashcode2020/program3.cpp	/^vector<ll> CalculateMaximumUsingDynamicProgramming(ll Ms, ll N, vector<ll> slices) {$/;"	f
main	hashcode2020/program3.cpp	/^int main() {$/;"	f
main	hashcode2020/program.cpp	/^int main() {$/;"	f
heap	candcpp/heap.cpp	/^class heap$/;"	c	file:
size	candcpp/heap.cpp	/^    int size = 0;$/;"	m	class:heap	file:
capacity	candcpp/heap.cpp	/^    int capacity = 10;$/;"	m	class:heap	file:
items	candcpp/heap.cpp	/^    int *items = new int[capacity];$/;"	m	class:heap	file:
getLeftChildIndex	candcpp/heap.cpp	/^    int getLeftChildIndex(int index) { return index*2 + 1 ; }$/;"	f	class:heap	file:
getRightChildIndex	candcpp/heap.cpp	/^    int getRightChildIndex(int index) { return index*2 + 2 ; }$/;"	f	class:heap	file:
getParentIndex	candcpp/heap.cpp	/^    int getParentIndex(int index) { return (index-1)\/2 ; }$/;"	f	class:heap	file:
hasLeftChildIndex	candcpp/heap.cpp	/^    bool hasLeftChildIndex(int index) { return index*2 + 1 < size ; }$/;"	f	class:heap	file:
hasRightChildIndex	candcpp/heap.cpp	/^    bool hasRightChildIndex(int index) { return index*2 + 2 < size ; }$/;"	f	class:heap	file:
hasParentIndex	candcpp/heap.cpp	/^    bool hasParentIndex(int index) { return (index-1)\/2 < size ; }$/;"	f	class:heap	file:
LeftChild	candcpp/heap.cpp	/^    int LeftChild(int index) { return items[getLeftChildIndex(index)] ; }$/;"	f	class:heap	file:
RightChild	candcpp/heap.cpp	/^    int RightChild(int index) { return items[getRightChildIndex(index)] ; }$/;"	f	class:heap	file:
Parent	candcpp/heap.cpp	/^    int Parent(int index) { return items[getParentIndex(index)] ; }$/;"	f	class:heap	file:
swap	candcpp/heap.cpp	/^    void swap( int index1, int index2 ) {$/;"	f	class:heap	file:
ensureCapacity	candcpp/heap.cpp	/^    void ensureCapacity() {$/;"	f	class:heap	file:
show	candcpp/heap.cpp	/^    void show() {$/;"	f	class:heap
peek	candcpp/heap.cpp	/^    int peek() {$/;"	f	class:heap
poll	candcpp/heap.cpp	/^    int poll() {$/;"	f	class:heap
add	candcpp/heap.cpp	/^    void add(int item) {$/;"	f	class:heap
heapifyUp	candcpp/heap.cpp	/^    void heapifyUp() {$/;"	f	class:heap
heapifyDown	candcpp/heap.cpp	/^void heap::heapifyDown() {$/;"	f	class:heap
main	candcpp/heap.cpp	/^int main() {$/;"	f
heapify	candcpp/sorting/heapSort.cpp	/^void heapify(int *arr, int n, int e) {$/;"	f
heapShort	candcpp/sorting/heapSort.cpp	/^void heapShort (int *arr, int n) {$/;"	f
main	candcpp/sorting/heapSort.cpp	/^int main()$/;"	f
printArray	candcpp/sorting/common/common.cpp	/^void printArray(int arr[], int size) {$/;"	f
swap	candcpp/sorting/common/common.cpp	/^void swap (int *arr, int element1, int element2) {$/;"	f
COMMON_H	candcpp/sorting/common/common.h	2;"	d
MergeSort	candcpp/sorting/mergeSort.cpp	/^void MergeSort (int *arr, int n) {$/;"	f
main	candcpp/sorting/mergeSort.cpp	/^int main()$/;"	f
Node	candcpp/linkedList/completeLinkedList.c	/^struct Node {$/;"	s	file:
data	candcpp/linkedList/completeLinkedList.c	/^  int data;$/;"	m	struct:Node	file:
next	candcpp/linkedList/completeLinkedList.c	/^  struct Node *next;$/;"	m	struct:Node	typeref:struct:Node::Node	file:
printList	candcpp/linkedList/completeLinkedList.c	/^void printList(struct Node *n) {$/;"	f
push	candcpp/linkedList/completeLinkedList.c	/^void push(struct Node** head_ref, int data) {$/;"	f
insertAfter	candcpp/linkedList/completeLinkedList.c	/^void insertAfter(struct Node* prev, int data) {$/;"	f
append	candcpp/linkedList/completeLinkedList.c	/^void append(struct Node** head_ref, int data) {$/;"	f
deleteNode	candcpp/linkedList/completeLinkedList.c	/^void deleteNode (struct Node** head_ref, int key) {$/;"	f
deleteByIndex	candcpp/linkedList/completeLinkedList.c	/^void deleteByIndex(struct Node** head_ref, int key) {$/;"	f
main	candcpp/linkedList/completeLinkedList.c	/^int main() {$/;"	f
Node	candcpp/linkedList/firstsimpleList.c	/^struct Node {$/;"	s	file:
data	candcpp/linkedList/firstsimpleList.c	/^  int data;$/;"	m	struct:Node	file:
next	candcpp/linkedList/firstsimpleList.c	/^  struct Node *next;$/;"	m	struct:Node	typeref:struct:Node::Node	file:
main	candcpp/linkedList/firstsimpleList.c	/^void main() {$/;"	f
trypointer	candcpp/linkedList/try.c	/^void trypointer(int** x) {$/;"	f
main	candcpp/linkedList/try.c	/^ int main() {$/;"	f
Node	candcpp/linkedList/firstSimpleLinkedList.c	/^struct Node {$/;"	s	file:
data	candcpp/linkedList/firstSimpleLinkedList.c	/^  int data;$/;"	m	struct:Node	file:
next	candcpp/linkedList/firstSimpleLinkedList.c	/^  struct Node *next;$/;"	m	struct:Node	typeref:struct:Node::Node	file:
printList	candcpp/linkedList/firstSimpleLinkedList.c	/^void printList(struct Node *n) {$/;"	f
main	candcpp/linkedList/firstSimpleLinkedList.c	/^int main() {$/;"	f
linear_search	candcpp/searching/simpleArray.c	/^int linear_search(int a[], int n, int no) {$/;"	f
binary_search	candcpp/searching/simpleArray.c	/^int binary_search(int a[], int lb, int ub , int no) {$/;"	f
main	candcpp/searching/simpleArray.c	/^void main()$/;"	f
printArray	candcpp/roundrobin.cpp	/^void printArray(unsigned short arr[], int size) {$/;"	f
remainingProcess	candcpp/roundrobin.cpp	/^int remainingProcess( int *array, int n, int p) {$/;"	f
roundRobinAvgWt	candcpp/roundrobin.cpp	/^float roundRobinAvgWt(unsigned short *arrival, unsigned short *run, int n, int q) {$/;"	f
main	candcpp/roundrobin.cpp	/^int main() {$/;"	f
main	candcpp/e.cpp	/^int main() {$/;"	f
Trinales	triangle.cpp	/^class Trinales {$/;"	c	file:
a	triangle.cpp	/^    public: int a, b, c;$/;"	m	class:Trinales	file:
b	triangle.cpp	/^    public: int a, b, c;$/;"	m	class:Trinales	file:
c	triangle.cpp	/^    public: int a, b, c;$/;"	m	class:Trinales	file:
assingValue	triangle.cpp	/^    void assingValue(int f, int g, int h) {$/;"	f	class:Trinales
printValue	triangle.cpp	/^    void printValue() {$/;"	f	class:Trinales
printArea	triangle.cpp	/^    float printArea() {$/;"	f	class:Trinales
main	triangle.cpp	/^int main() {$/;"	f
Node	geeksforgeeks/clonethetree.cpp	/^    struct Node$/;"	s	file:
data	geeksforgeeks/clonethetree.cpp	/^        int data;$/;"	m	struct:Node	file:
left	geeksforgeeks/clonethetree.cpp	/^        struct Node *left;$/;"	m	struct:Node	typeref:struct:Node::Node	file:
right	geeksforgeeks/clonethetree.cpp	/^        struct Node *right;$/;"	m	struct:Node	typeref:struct:Node::Node	file:
random	geeksforgeeks/clonethetree.cpp	/^        struct Node *random;$/;"	m	struct:Node	typeref:struct:Node::Node	file:
Node	geeksforgeeks/clonethetree.cpp	/^        Node(int x)$/;"	f	struct:Node
printInorder	geeksforgeeks/clonethetree.cpp	/^    int printInorder(Node * a, Node * b)$/;"	f
inorder	geeksforgeeks/clonethetree.cpp	/^    void inorder(Node * root)$/;"	f
main	geeksforgeeks/clonethetree.cpp	/^    int main()$/;"	f
m	geeksforgeeks/clonethetree.cpp	/^unordered_map<Node *, Node *> m;$/;"	v
cloneTree	geeksforgeeks/clonethetree.cpp	/^Node *cloneTree(Node *tree)$/;"	f
mesg_buffer	systemDesign/messageQueueforwriterProcess.cpp	/^struct mesg_buffer$/;"	s	file:
mesg_type	systemDesign/messageQueueforwriterProcess.cpp	/^    long mesg_type;$/;"	m	struct:mesg_buffer	file:
mesg_text	systemDesign/messageQueueforwriterProcess.cpp	/^    char mesg_text[100];$/;"	m	struct:mesg_buffer	file:
message	systemDesign/messageQueueforwriterProcess.cpp	/^} message;$/;"	v	typeref:struct:mesg_buffer
main	systemDesign/messageQueueforwriterProcess.cpp	/^int main()$/;"	f
mesg_buffer	systemDesign/messageQueueForReaderProcess.cpp	/^struct mesg_buffer$/;"	s	file:
mesg_type	systemDesign/messageQueueForReaderProcess.cpp	/^    long mesg_type;$/;"	m	struct:mesg_buffer	file:
mesg_text	systemDesign/messageQueueForReaderProcess.cpp	/^    char mesg_text[100];$/;"	m	struct:mesg_buffer	file:
message	systemDesign/messageQueueForReaderProcess.cpp	/^} message;$/;"	v	typeref:struct:mesg_buffer
main	systemDesign/messageQueueForReaderProcess.cpp	/^int main()$/;"	f
cmp	systemDesign/consistentHashing.py	/^def cmp(a, b):$/;"	f
ConsistentHash	systemDesign/consistentHashing.py	/^class ConsistentHash:$/;"	c
__init__	systemDesign/consistentHashing.py	/^    def __init__(self, num_machines=1, num_replicas=1):$/;"	m	class:ConsistentHash
get_machine	systemDesign/consistentHashing.py	/^    def get_machine(self, key):$/;"	m	class:ConsistentHash
my_hash	systemDesign/consistentHashing.py	/^def my_hash(key):$/;"	f
main	systemDesign/consistentHashing.py	/^def main():$/;"	f
ll	codeforces/wayTooLongWords_71A.cpp	/^typedef long long ll;$/;"	t	file:
convertToAbbribation	codeforces/wayTooLongWords_71A.cpp	/^string convertToAbbribation(string a) {$/;"	f
main	codeforces/wayTooLongWords_71A.cpp	/^int main() {$/;"	f
FORI	common/segmentTree.cpp	4;"	d	file:
ll	common/segmentTree.cpp	/^typedef long long ll;$/;"	t	file:
getMid	common/segmentTree.cpp	/^int getMid(int s, int e) { return s+(e-s)\/2; }$/;"	f
fillSegmentTree	common/segmentTree.cpp	/^int fillSegmentTree(int arr[], int start, int end, int *segmentTree, int index) {$/;"	f
constructSegmentTree	common/segmentTree.cpp	/^int *constructSegmentTree(int arr[], int N) {$/;"	f
getQueryUtil	common/segmentTree.cpp	/^int getQueryUtil(int *segmentTree, int tStart , int tEnd, int qStart, int qEnd, int index) {$/;"	f
getQuery	common/segmentTree.cpp	/^int getQuery(int *segmentTree, int N, int qStart, int qEnd) {$/;"	f
main	common/segmentTree.cpp	/^int main() {$/;"	f
ll	common/important definations.cpp	1;"	d	file:
ld	common/important definations.cpp	2;"	d	file:
mod	common/important definations.cpp	3;"	d	file:
eps	common/important definations.cpp	4;"	d	file:
PI	common/important definations.cpp	5;"	d	file:
INF	common/important definations.cpp	6;"	d	file:
INFLL	common/important definations.cpp	7;"	d	file:
endl	common/important definations.cpp	8;"	d	file:
vi	common/important definations.cpp	9;"	d	file:
vll	common/important definations.cpp	11;"	d	file:
vc	common/important definations.cpp	12;"	d	file:
pii	common/important definations.cpp	14;"	d	file:
pll	common/important definations.cpp	15;"	d	file:
pil	common/important definations.cpp	16;"	d	file:
pli	common/important definations.cpp	17;"	d	file:
pcc	common/important definations.cpp	18;"	d	file:
pdd	common/important definations.cpp	19;"	d	file:
mp	common/important definations.cpp	20;"	d	file:
F	common/important definations.cpp	21;"	d	file:
S	common/important definations.cpp	22;"	d	file:
pb	common/important definations.cpp	23;"	d	file:
fo	common/important definations.cpp	24;"	d	file:
foi	common/important definations.cpp	25;"	d	file:
pd	common/important definations.cpp	26;"	d	file:
sd	common/important definations.cpp	27;"	d	file:
nl	common/important definations.cpp	28;"	d	file:
gtl	common/important definations.cpp	29;"	d	file:
flsh	common/important definations.cpp	30;"	d	file:
sws	common/important definations.cpp	31;"	d	file:
gcd	common/important definations.cpp	32;"	d	file:
clr	common/important definations.cpp	33;"	d	file:
all	common/important definations.cpp	34;"	d	file:
foreach	common/important definations.cpp	35;"	d	file:
sz	common/important definations.cpp	36;"	d	file:
FORI	common/important definations.cpp	39;"	d	file:
print	common/important definations.cpp	/^void print (T t) {$/;"	f
print_map	common/important definations.cpp	/^void print_map (T t) {$/;"	f
graph	common/important definations.cpp	/^		unordered_map<int, vector<int>> graph;$/;"	v
graph	common/important definations.cpp	/^        print_map(graph);$/;"	v
sortByLength	common/important definations.cpp	/^auto sortByLength = [](const auto& a, const auto& b) { return a.size () < b.size (); };$/;"	v
MAX	common/factorialAndBinaryExp.cpp	/^const long long MAX=1000000007;$/;"	v
binary_exp	common/factorialAndBinaryExp.cpp	/^long long binary_exp(long long x, long long n)$/;"	f
factorial	common/factorialAndBinaryExp.cpp	/^long long factorial(int n,int max)$/;"	f
main	common/factorialAndBinaryExp.cpp	/^int main() {$/;"	f
ll	common/coinChange.cpp	/^typedef long long ll;$/;"	t	file:
fori	common/coinChange.cpp	4;"	d	file:
inf	common/coinChange.cpp	/^ll inf = numeric_limits<ll>::max();$/;"	v
coinChange	common/coinChange.cpp	/^ll coinChange(vector<ll> coins, ll count) {$/;"	f
main	common/coinChange.cpp	/^int main() {$/;"	f
split	common/stringSlicingIntoArray.cpp	/^vector<string> split(const string &s, char delim) {$/;"	f
FORI	fast.cpp	4;"	d	file:
ll	fast.cpp	/^typedef long long ll;$/;"	t	file:
main	fast.cpp	/^int main()$/;"	f
fun	hackerearth/kaleyra/countWays.py	/^def fun(N):$/;"	f
FORI	random/goodSubsequence.cpp	4;"	d	file:
FORJ	random/goodSubsequence.cpp	5;"	d	file:
FORIMINUS	random/goodSubsequence.cpp	7;"	d	file:
FORJMINUS	random/goodSubsequence.cpp	8;"	d	file:
ll	random/goodSubsequence.cpp	/^typedef long long ll;$/;"	t	file:
GoodSubArray	random/goodSubsequence.cpp	/^long long GoodSubArray (int N, int*arr, bool* is_bad) {$/;"	f
main	random/goodSubsequence.cpp	/^int main() {$/;"	f
Node	python/linkedList/firstSimpleLinklist.py	/^class Node:$/;"	c
__init__	python/linkedList/firstSimpleLinklist.py	/^    def __init__(self, data):$/;"	m	class:Node
linkedList	python/linkedList/firstSimpleLinklist.py	/^class linkedList:$/;"	c
__init__	python/linkedList/firstSimpleLinklist.py	/^    def __init__(self):$/;"	m	class:linkedList
printList	python/linkedList/firstSimpleLinklist.py	/^    def printList(self):$/;"	m	class:linkedList
push	python/linkedList/firstSimpleLinklist.py	/^    def push(self, new_data):$/;"	m	class:linkedList
append	python/linkedList/firstSimpleLinklist.py	/^    def append(self, new_data):$/;"	m	class:linkedList
instertAfter	python/linkedList/firstSimpleLinklist.py	/^    def instertAfter(self, prevNode, new_data):$/;"	m	class:linkedList
pop	python/linkedList/firstSimpleLinklist.py	/^    def pop(self):$/;"	m	class:linkedList
count	python/linkedList/firstSimpleLinklist.py	/^    def count(self):$/;"	m	class:linkedList
llist	python/linkedList/firstSimpleLinklist.py	/^    llist = linkedList()$/;"	v	class:linkedList
second	python/linkedList/firstSimpleLinklist.py	/^    second = Node(2)$/;"	v	class:linkedList
third	python/linkedList/firstSimpleLinklist.py	/^    third = Node(3)$/;"	v	class:linkedList
node	python/linkedList/firstSimleList.py	/^class node:$/;"	c
__init__	python/linkedList/firstSimleList.py	/^    def __init__ (self, data):$/;"	m	class:node
linkedList	python/linkedList/firstSimleList.py	/^class linkedList:$/;"	c
__init__	python/linkedList/firstSimleList.py	/^    def __init__ (self):$/;"	m	class:linkedList
ll	hackerank/BreadthFirstSearch_ShortestReach.cpp	3;"	d	file:
FORI	hackerank/BreadthFirstSearch_ShortestReach.cpp	4;"	d	file:
eW	hackerank/BreadthFirstSearch_ShortestReach.cpp	/^const int eW = 6; \/\/edge weight$/;"	v
print_map	hackerank/BreadthFirstSearch_ShortestReach.cpp	/^void print_map (T t) {$/;"	f
print	hackerank/BreadthFirstSearch_ShortestReach.cpp	/^void print (T t) {$/;"	f
BFS	hackerank/BreadthFirstSearch_ShortestReach.cpp	/^void BFS(unordered_map<int, vector<int>> &g, vector<int> &dis, int vertex, int d) {$/;"	f
sortestReach	hackerank/BreadthFirstSearch_ShortestReach.cpp	/^vector<int> sortestReach(unordered_map<int, vector<int>> &graph, int first) {$/;"	f
main	hackerank/BreadthFirstSearch_ShortestReach.cpp	/^int main()$/;"	f
ll	hackerank/findTheNearestClone.cpp	/^typedef long long ll;$/;"	t	file:
fori	hackerank/findTheNearestClone.cpp	4;"	d	file:
inf	hackerank/findTheNearestClone.cpp	/^ll inf = numeric_limits<ll>::max();$/;"	v
main	hackerank/findTheNearestClone.cpp	/^int main() {$/;"	f
bomberMan	hackerank/TheBombermanGame.cpp	/^string *bomberMan(int n, string *grid, int row, int col) {$/;"	f
main	hackerank/TheBombermanGame.cpp	/^int main()$/;"	f
SIZE	hackerank/CrosswordPuzzle.cpp	/^const int SIZE = 10;$/;"	v
returnMatrix	hackerank/CrosswordPuzzle.cpp	/^vector<string> returnMatrix;$/;"	v
split	hackerank/CrosswordPuzzle.cpp	/^vector<string> split(const string &s, char delim) {$/;"	f
printMatrix	hackerank/CrosswordPuzzle.cpp	/^void printMatrix(vector<string>& matrix) { $/;"	f
checkHorizontal	hackerank/CrosswordPuzzle.cpp	/^vector<string> checkHorizontal(int x, int y, vector<string> matrix, string currentword) {$/;"	f
checkVertical	hackerank/CrosswordPuzzle.cpp	/^vector<string> checkVertical(int x, int y, vector<string> matrix, string currentword) {$/;"	f
recuresAndFind	hackerank/CrosswordPuzzle.cpp	/^void recuresAndFind(vector<string> crossword, vector<string> words,int index) {$/;"	f
crosswordPuzzle	hackerank/CrosswordPuzzle.cpp	/^vector<string> crosswordPuzzle(vector<string> crossword, string words) {$/;"	f
main	hackerank/CrosswordPuzzle.cpp	/^int main()$/;"	f
ll	hackerank/AlmostSorted.cpp	2;"	d	file:
FORI	hackerank/AlmostSorted.cpp	3;"	d	file:
swapOrReverse	hackerank/AlmostSorted.cpp	/^void swapOrReverse(int* a, int n) {$/;"	f
main	hackerank/AlmostSorted.cpp	/^int main()$/;"	f
temt	hackerank/PasswordCracker.cpp	/^int temt = 0;$/;"	v
printArr	hackerank/PasswordCracker.cpp	/^void printArr( vector <string> pass, int r) {$/;"	f
join	hackerank/PasswordCracker.cpp	/^void join(const vector<string>& v, char c, string& s, int r) {$/;"	f
crack	hackerank/PasswordCracker.cpp	/^void crack(vector <string> pass, string attempt, string word, vector<string> fucked) {$/;"	f
passwordCracker	hackerank/PasswordCracker.cpp	/^string passwordCracker(vector <string> pass, string attempt) {$/;"	f
main	hackerank/PasswordCracker.cpp	/^int main() {$/;"	f
main	hackerank/example.cpp	/^int main()$/;"	f
surfaceArea	hackerank/3DSurfaceArea.cpp	/^int surfaceArea(vector<vector<int>> A) {$/;"	f
main	hackerank/3DSurfaceArea.cpp	/^int main()$/;"	f
ll	hackerank/DNAHealthcopy.cpp	/^typedef long long ll;$/;"	t	file:
F	hackerank/DNAHealthcopy.cpp	7;"	d	file:
S	hackerank/DNAHealthcopy.cpp	8;"	d	file:
MAXN	hackerank/DNAHealthcopy.cpp	/^const int MAXN = 2e6 + 10;$/;"	v
XX	hackerank/DNAHealthcopy.cpp	/^const int XX = 1e5 + 10;$/;"	v
C	hackerank/DNAHealthcopy.cpp	/^const int C = 26;$/;"	v
n	hackerank/DNAHealthcopy.cpp	/^int n, qq, pos[MAXN], nxt[MAXN][C], f[MAXN], sz, val[MAXN];$/;"	v
qq	hackerank/DNAHealthcopy.cpp	/^int n, qq, pos[MAXN], nxt[MAXN][C], f[MAXN], sz, val[MAXN];$/;"	v
pos	hackerank/DNAHealthcopy.cpp	/^int n, qq, pos[MAXN], nxt[MAXN][C], f[MAXN], sz, val[MAXN];$/;"	v
nxt	hackerank/DNAHealthcopy.cpp	/^int n, qq, pos[MAXN], nxt[MAXN][C], f[MAXN], sz, val[MAXN];$/;"	v
f	hackerank/DNAHealthcopy.cpp	/^int n, qq, pos[MAXN], nxt[MAXN][C], f[MAXN], sz, val[MAXN];$/;"	v
sz	hackerank/DNAHealthcopy.cpp	/^int n, qq, pos[MAXN], nxt[MAXN][C], f[MAXN], sz, val[MAXN];$/;"	v
val	hackerank/DNAHealthcopy.cpp	/^int n, qq, pos[MAXN], nxt[MAXN][C], f[MAXN], sz, val[MAXN];$/;"	v
insert	hackerank/DNAHealthcopy.cpp	/^int insert(string &t){$/;"	f
q	hackerank/DNAHealthcopy.cpp	/^int q[MAXN], sub[MAXN], st[MAXN], ft[MAXN], cur[MAXN];$/;"	v
sub	hackerank/DNAHealthcopy.cpp	/^int q[MAXN], sub[MAXN], st[MAXN], ft[MAXN], cur[MAXN];$/;"	v
st	hackerank/DNAHealthcopy.cpp	/^int q[MAXN], sub[MAXN], st[MAXN], ft[MAXN], cur[MAXN];$/;"	v
ft	hackerank/DNAHealthcopy.cpp	/^int q[MAXN], sub[MAXN], st[MAXN], ft[MAXN], cur[MAXN];$/;"	v
cur	hackerank/DNAHealthcopy.cpp	/^int q[MAXN], sub[MAXN], st[MAXN], ft[MAXN], cur[MAXN];$/;"	v
aho	hackerank/DNAHealthcopy.cpp	/^void aho(){$/;"	f
fen	hackerank/DNAHealthcopy.cpp	/^ll fen[MAXN], ans[MAXN];$/;"	v
ans	hackerank/DNAHealthcopy.cpp	/^ll fen[MAXN], ans[MAXN];$/;"	v
vec	hackerank/DNAHealthcopy.cpp	/^vector<pair<pair<int, int>, int>> vec[XX];$/;"	v
add	hackerank/DNAHealthcopy.cpp	/^void add(int v, int val){for (v++; v<MAXN; v+=v&-v) fen[v] += val;}$/;"	f
get	hackerank/DNAHealthcopy.cpp	/^ll get(int v){$/;"	f
main	hackerank/DNAHealthcopy.cpp	/^int main(){$/;"	f
ll	hackerank/RecursiveDigitSum.cpp	/^typedef long long ll;$/;"	t	file:
superDigit	hackerank/RecursiveDigitSum.cpp	/^int superDigit(string n, int k) {$/;"	f
main	hackerank/RecursiveDigitSum.cpp	/^int main()$/;"	f
split_string	hackerank/RecursiveDigitSum.cpp	/^vector<string> split_string(string input_string) {$/;"	f
SS	hackerank/SimplifiedChessEngine.py	/^SS = 4;$/;"	v
whoseTurn	hackerank/SimplifiedChessEngine.py	/^def whoseTurn(turn, x, y):$/;"	f
printBoard	hackerank/SimplifiedChessEngine.py	/^def printBoard(board):$/;"	f
blackTurn	hackerank/SimplifiedChessEngine.py	/^def blackTurn(board, white, black, w):$/;"	f
whiteTurn	hackerank/SimplifiedChessEngine.py	/^def whiteTurn(board, white, black, w):$/;"	f
simplifiedChessEngine	hackerank/SimplifiedChessEngine.py	/^def simplifiedChessEngine(whites, blacks, moves):$/;"	f
g	hackerank/SimplifiedChessEngine.py	/^    g = int(input())$/;"	v
wbm	hackerank/SimplifiedChessEngine.py	/^        wbm = input().split()$/;"	v
w	hackerank/SimplifiedChessEngine.py	/^        w = int(wbm[0])$/;"	v
b	hackerank/SimplifiedChessEngine.py	/^        b = int(wbm[1])$/;"	v
m	hackerank/SimplifiedChessEngine.py	/^        m = int(wbm[2])$/;"	v
whites	hackerank/SimplifiedChessEngine.py	/^        whites = []$/;"	v
blacks	hackerank/SimplifiedChessEngine.py	/^        blacks = []$/;"	v
makePair	hackerank/SimplifiedChessEngine.cpp	/^typedef pair< char, bool > makePair;$/;"	t	file:
triplate	hackerank/SimplifiedChessEngine.cpp	/^typedef pair< char, pair< int, int>> triplate;$/;"	t	file:
SS	hackerank/SimplifiedChessEngine.cpp	/^const int SS = 4;$/;"	v
printVector	hackerank/SimplifiedChessEngine.cpp	/^void printVector(vector<vector<char>> v) {$/;"	f
printVectorPair	hackerank/SimplifiedChessEngine.cpp	/^void printVectorPair(vector<vector<makePair>> v) {$/;"	f
whiteTurn	hackerank/SimplifiedChessEngine.cpp	/^bool whiteTurn(vector<vector<makePair>> matrix, vector<triplate> white, vector<triplate> blacks,int w_index, int b_index, int w) {$/;"	f
simplifiedChessEngine	hackerank/SimplifiedChessEngine.cpp	/^string simplifiedChessEngine(vector<vector<char>> whites, vector<vector<char>> blacks, int moves) {$/;"	f
main	hackerank/SimplifiedChessEngine.cpp	/^int main()$/;"	f
split_string	hackerank/SimplifiedChessEngine.cpp	/^vector<string> split_string(string input_string) {$/;"	f
main	hackerank/AbsolutePermutation.cpp	/^int main() {$/;"	f
counter	hackerank/ThePowerSum.cpp	/^int counter=0;$/;"	v
X	hackerank/ThePowerSum.cpp	/^int X;$/;"	v
L	hackerank/ThePowerSum.cpp	/^int L;$/;"	v
combination	hackerank/ThePowerSum.cpp	/^void combination(int a[],int sum, int start, int end,int index, int r) {$/;"	f
powerSum	hackerank/ThePowerSum.cpp	/^int powerSum(int N) {$/;"	f
main	hackerank/ThePowerSum.cpp	/^int main()$/;"	f
CC	hackerank/StoneDivision.cpp	/^long CC = 0;$/;"	v
printList	hackerank/StoneDivision.cpp	/^void printList(vector<long> s) {$/;"	f
divide	hackerank/StoneDivision.cpp	/^long divide(long n, vector<long> s,long count, unordered_map<long, long> Map) {$/;"	f
stoneDivision	hackerank/StoneDivision.cpp	/^long stoneDivision(long n, vector<long> s) {$/;"	f
main	hackerank/StoneDivision.cpp	/^int main()$/;"	f
split_string	hackerank/StoneDivision.cpp	/^vector<string> split_string(string input_string) {$/;"	f
showlist	hackerank/RoadsandLibraries.cpp	/^void showlist(list <int> g) $/;"	f
printAdjecencyList	hackerank/RoadsandLibraries.cpp	/^void printAdjecencyList(list<int> adj[], int n) {$/;"	f
DFS	hackerank/RoadsandLibraries.cpp	/^int DFS(list<int> Adj[],int V[],int vertex, int n) {$/;"	f
roadsAndLibraries	hackerank/RoadsandLibraries.cpp	/^long roadsAndLibraries(int n, int c_lib, int c_road, vector<vector<int>> cities) {$/;"	f
main	hackerank/RoadsandLibraries.cpp	/^int main()$/;"	f
split_string	hackerank/RoadsandLibraries.cpp	/^vector<string> split_string(string input_string) {$/;"	f
main	hackerank/arrRotation2.cpp	/^int main()$/;"	f
ll	hackerank/DijkstraShortestReach2.cpp	/^typedef long long ll;$/;"	t	file:
fori	hackerank/DijkstraShortestReach2.cpp	4;"	d	file:
inf	hackerank/DijkstraShortestReach2.cpp	/^ll inf = numeric_limits<ll>::max();$/;"	v
main	hackerank/DijkstraShortestReach2.cpp	/^int main() {$/;"	f
dp	hackerank/TheCoinChangeProblem.cpp	/^vector<vector<long>> dp;$/;"	v
getWays	hackerank/TheCoinChangeProblem.cpp	/^long getWays(long n, vector<long> c) {$/;"	f
main	hackerank/TheCoinChangeProblem.cpp	/^int main()$/;"	f
split_string	hackerank/TheCoinChangeProblem.cpp	/^vector<string> split_string(string input_string) {$/;"	f
rotateArray	hackerank/arrRotation.cpp	/^void rotateArray(vector<vector<int>> a,int r) {$/;"	f
main	hackerank/arrRotation.cpp	/^int main() {$/;"	f
Healthy	hackerank/DNAHealth.cpp	/^void Healthy(int n,vector<string> g, vector<int> h, int s, vector<int> start, vector<int> end, vector<string> d ) {$/;"	f
main	hackerank/DNAHealth.cpp	/^int main()$/;"	f
split_string	hackerank/DNAHealth.cpp	/^vector<string> split_string(string input_string) {$/;"	f
FORI	hackerank/JourneytotheMoon.cpp	4;"	d	file:
FORJ	hackerank/JourneytotheMoon.cpp	5;"	d	file:
FORIMINUS	hackerank/JourneytotheMoon.cpp	7;"	d	file:
FORJMINUS	hackerank/JourneytotheMoon.cpp	8;"	d	file:
ll	hackerank/JourneytotheMoon.cpp	/^typedef long long ll;$/;"	t	file:
showlist	hackerank/JourneytotheMoon.cpp	/^void showlist(list <int> g) $/;"	f
printAdjecencyMap	hackerank/JourneytotheMoon.cpp	/^void printAdjecencyMap(unordered_map<int, list<int>> adj) {$/;"	f
DFS	hackerank/JourneytotheMoon.cpp	/^int DFS(unordered_map<int, vector<int>> &Adj,bool V[],int vertex) {$/;"	f
main	hackerank/JourneytotheMoon.cpp	/^int main() {$/;"	f
No_Char	hackerank/MaximumPalindromes.cpp	/^const int No_Char=26;$/;"	v
MAX	hackerank/MaximumPalindromes.cpp	/^const long long MAX=1000000007;$/;"	v
fact	hackerank/MaximumPalindromes.cpp	/^const long long fact[] =  {1, 2, 6, 24, 120, 720, 5040, 40320, 362880, 3628800, 39916800, 479001600, 6227020800, 3178290612, 2674358865, 10789741616, 13425606282, 7660911438, 12557316391, 11146326140, 3072847323, 1602640644, 13860734651, 20657629440, 16440732500, 11459042088, 12394134297, 11035757964, 1036978723, 1109361480, 3390205663, 12486580544, 16057155180, 1943272312, 33014530675, 523095984, 19354551408, 13472948450, 18444986001, 17799435000, 32776830121, 32626855674, 26954784350, 42010503392, 472639410, 21741412860, 34846397511, 40627069104, 30726372376, 36318608300 };$/;"	v
bin	hackerank/MaximumPalindromes.cpp	/^const long long bin[] = {1, 500000004, 333333336, 250000002, 400000003, 166666668, 142857144, 125000001, 111111112, 700000005, 818181824, 83333334, 153846155, 71428572, 466666670, 562500004, 352941179, 55555556, 157894738, 850000006, 47619048, 409090912, 739130440, 41666667, 280000002, 576923081, 370370373, 35714286, 758620695, 233333335, 129032259, 281250002, 939393946, 676470593, 628571433, 27777778, 621621626, 78947369, 717948723, 425000003, 658536590, 23809524, 395348840, 204545456, 822222228, 369565220, 404255322, 520833337, 448979595, 140000001 };$/;"	v
binary_exp	hackerank/MaximumPalindromes.cpp	/^long long binary_exp(long long x, long long n)$/;"	f
factorial	hackerank/MaximumPalindromes.cpp	/^long long factorial(int n,int max)$/;"	f
main	hackerank/MaximumPalindromes.cpp	/^int main() {$/;"	f
ll	spoj/Alphacode.cpp	/^typedef long long ll;$/;"	t	file:
main	spoj/Alphacode.cpp	/^int main() {$/;"	f
ll	spoj/MiceAndMaze.cpp	/^typedef long long ll;$/;"	t	file:
fori	spoj/MiceAndMaze.cpp	4;"	d	file:
inf	spoj/MiceAndMaze.cpp	/^ll inf = numeric_limits<ll>::max();$/;"	v
main	spoj/MiceAndMaze.cpp	/^int main() {$/;"	f
main	codechef/MagicianVersusChef.c	/^int main() {$/;"	f
FORI	codechef/battleOfBrians/BirthdayParty.cpp	4;"	d	file:
FORJ	codechef/battleOfBrians/BirthdayParty.cpp	5;"	d	file:
FORIMINUS	codechef/battleOfBrians/BirthdayParty.cpp	7;"	d	file:
FORJMINUS	codechef/battleOfBrians/BirthdayParty.cpp	8;"	d	file:
ll	codechef/battleOfBrians/BirthdayParty.cpp	/^typedef long long ll;$/;"	t	file:
main	codechef/battleOfBrians/BirthdayParty.cpp	/^int main() {$/;"	f
FORI	codechef/battleOfBrians/BattleGroundandMightyGun.cpp	4;"	d	file:
FORJ	codechef/battleOfBrians/BattleGroundandMightyGun.cpp	5;"	d	file:
FORIMINUS	codechef/battleOfBrians/BattleGroundandMightyGun.cpp	7;"	d	file:
FORJMINUS	codechef/battleOfBrians/BattleGroundandMightyGun.cpp	8;"	d	file:
ll	codechef/battleOfBrians/BattleGroundandMightyGun.cpp	/^typedef long long ll;$/;"	t	file:
main	codechef/battleOfBrians/BattleGroundandMightyGun.cpp	/^int main() {$/;"	f
STR_PWD	codechef/battleOfBrians/PasswordStrength.java	/^class STR_PWD {$/;"	c
sc	codechef/battleOfBrians/PasswordStrength.java	/^    static Scanner sc = new Scanner(System.in);$/;"	f	class:STR_PWD
main	codechef/battleOfBrians/PasswordStrength.java	/^    public static void main(String[] args) throws IOException {$/;"	m	class:STR_PWD
FORI	codechef/battleOfBrians/TheKamiyamaHighSchoolFestival.cpp	4;"	d	file:
FORJ	codechef/battleOfBrians/TheKamiyamaHighSchoolFestival.cpp	5;"	d	file:
FORIMINUS	codechef/battleOfBrians/TheKamiyamaHighSchoolFestival.cpp	7;"	d	file:
FORJMINUS	codechef/battleOfBrians/TheKamiyamaHighSchoolFestival.cpp	8;"	d	file:
ll	codechef/battleOfBrians/TheKamiyamaHighSchoolFestival.cpp	/^typedef long long ll;$/;"	t	file:
count	codechef/battleOfBrians/TheKamiyamaHighSchoolFestival.cpp	/^int count(int x, int y) $/;"	f
main	codechef/battleOfBrians/TheKamiyamaHighSchoolFestival.cpp	/^int main() {$/;"	f
FORI	codechef/cookoff_oct/PumpingWater.cpp	3;"	d	file:
ll	codechef/cookoff_oct/PumpingWater.cpp	/^typedef long long ll;$/;"	t	file:
countReservior	codechef/cookoff_oct/PumpingWater.cpp	/^int countReservior(ll a[], int start, int end) {$/;"	f
main	codechef/cookoff_oct/PumpingWater.cpp	/^int main() {$/;"	f
FORI	codechef/NovemberChallenge/ChefandDifficultContests.cpp	3;"	d	file:
ll	codechef/NovemberChallenge/ChefandDifficultContests.cpp	/^typedef long long ll;$/;"	t	file:
main	codechef/NovemberChallenge/ChefandDifficultContests.cpp	/^int main() {$/;"	f
FORI	codechef/NovemberChallenge/ChefandHappiness.cpp	3;"	d	file:
FORJ	codechef/NovemberChallenge/ChefandHappiness.cpp	4;"	d	file:
MAX_SIZE_A	codechef/NovemberChallenge/ChefandHappiness.cpp	5;"	d	file:
ll	codechef/NovemberChallenge/ChefandHappiness.cpp	/^typedef long long ll;$/;"	t	file:
main	codechef/NovemberChallenge/ChefandHappiness.cpp	/^int main() {$/;"	f
FORI	codechef/NovemberChallenge/ChefandRidges.cpp	3;"	d	file:
ll	codechef/NovemberChallenge/ChefandRidges.cpp	/^typedef long long ll;$/;"	t	file:
makePair	codechef/NovemberChallenge/ChefandRidges.cpp	/^typedef pair< ll, ll > makePair;$/;"	t	file:
addFractions	codechef/NovemberChallenge/ChefandRidges.cpp	/^makePair addFractions(makePair P, ll add, bool plus) {$/;"	f
main	codechef/NovemberChallenge/ChefandRidges.cpp	/^int main() {$/;"	f
FORI	codechef/NovemberChallenge/AppyLovesOne.cpp	3;"	d	file:
ll	codechef/NovemberChallenge/AppyLovesOne.cpp	/^typedef long long ll;$/;"	t	file:
main	codechef/NovemberChallenge/AppyLovesOne.cpp	/^int main() {$/;"	f
ll	codechef/cookoff10/YVNUM.cpp	3;"	d	file:
mod	codechef/cookoff10/YVNUM.cpp	4;"	d	file:
FORI	codechef/cookoff10/YVNUM.cpp	5;"	d	file:
print	codechef/cookoff10/YVNUM.cpp	/^void print (T t) {$/;"	f
print	codechef/cookoff10/YVNUM.cpp	/^void print (T t, int n) {$/;"	f
main	codechef/cookoff10/YVNUM.cpp	/^int main()$/;"	f
ll	codechef/cookoff10/campon.cpp	3;"	d	file:
FORI	codechef/cookoff10/campon.cpp	4;"	d	file:
main	codechef/cookoff10/campon.cpp	/^int main()$/;"	f
main	codechef/ChefandAdventures.cpp	/^int main() {$/;"	f
swap	codechef/program.cpp	/^void swap(int arr[],int p1,int p2) {$/;"	f
D2print	codechef/program.cpp	/^void D2print(int *arr, int r, int c,int *count) {$/;"	f
permute	codechef/program.cpp	/^void permute(int *arr,int *A, int N, int left, int right, int length) {$/;"	f
Calculate	codechef/program.cpp	/^void Calculate(int *arr, int *count, int *A, int N, int ptr,int limit, int length) {$/;"	f
main	codechef/program.cpp	/^int main() {$/;"	f
main	codechef/ATMMachine.cpp	/^int main()$/;"	f
main	codechef/MagicianVersusChef.cpp	/^int main() {$/;"	f
seriesSum	codechef/WarofXORs2.cpp	/^long int seriesSum(long int x) {$/;"	f
noToMinus	codechef/WarofXORs2.cpp	/^long int noToMinus(long int arr[],long int n) {$/;"	f
main	codechef/WarofXORs2.cpp	/^int main() {$/;"	f
FORI	codechef/sdnPre-eliminaton_round/ChefandTwoQueens.cpp	4;"	d	file:
FORJ	codechef/sdnPre-eliminaton_round/ChefandTwoQueens.cpp	5;"	d	file:
FORIMINUS	codechef/sdnPre-eliminaton_round/ChefandTwoQueens.cpp	7;"	d	file:
FORJMINUS	codechef/sdnPre-eliminaton_round/ChefandTwoQueens.cpp	8;"	d	file:
ll	codechef/sdnPre-eliminaton_round/ChefandTwoQueens.cpp	/^typedef long long ll;$/;"	t	file:
calcSafe	codechef/sdnPre-eliminaton_round/ChefandTwoQueens.cpp	/^int calcSafe(ll i, ll j, ll N, ll M) $/;"	f
main	codechef/sdnPre-eliminaton_round/ChefandTwoQueens.cpp	/^int main() {$/;"	f
FORI	codechef/sdnPre-eliminaton_round/BuddyNIM.cpp	4;"	d	file:
FORJ	codechef/sdnPre-eliminaton_round/BuddyNIM.cpp	5;"	d	file:
FORIMINUS	codechef/sdnPre-eliminaton_round/BuddyNIM.cpp	7;"	d	file:
FORJMINUS	codechef/sdnPre-eliminaton_round/BuddyNIM.cpp	8;"	d	file:
ll	codechef/sdnPre-eliminaton_round/BuddyNIM.cpp	/^typedef long long ll;$/;"	t	file:
main	codechef/sdnPre-eliminaton_round/BuddyNIM.cpp	/^int main() {$/;"	f
FORI	codechef/JanuaryChallenge/LuckyNumberGame.cpp	4;"	d	file:
ll	codechef/JanuaryChallenge/LuckyNumberGame.cpp	/^typedef long long ll;$/;"	t	file:
main	codechef/JanuaryChallenge/LuckyNumberGame.cpp	/^int main() {$/;"	f
ll	codechef/JanuaryChallenge/DistinctPairs.cpp	/^typedef long long ll;$/;"	t	file:
FORI	codechef/JanuaryChallenge/DistinctPairs.cpp	5;"	d	file:
minn	codechef/JanuaryChallenge/DistinctPairs.cpp	/^ll minn(ll a, ll b) {$/;"	f
main	codechef/JanuaryChallenge/DistinctPairs.cpp	/^int main() {$/;"	f
FORI	codechef/JanuaryChallenge/FancyQuotes.cpp	4;"	d	file:
ll	codechef/JanuaryChallenge/FancyQuotes.cpp	/^typedef long long ll;$/;"	t	file:
main	codechef/JanuaryChallenge/FancyQuotes.cpp	/^int main() {$/;"	f
FORI	codechef/feb2020/school_of_geometry.cpp	3;"	d	file:
ll	codechef/feb2020/school_of_geometry.cpp	/^typedef long long ll;$/;"	t	file:
main	codechef/feb2020/school_of_geometry.cpp	/^int main()  {$/;"	f
FORI	codechef/feb2020/accending_sort.cpp	3;"	d	file:
ll	codechef/feb2020/accending_sort.cpp	/^typedef long long ll;$/;"	t	file:
create_possibilites	codechef/feb2020/accending_sort.cpp	/^int* create_possibilites(int* arr, int len) {$/;"	f
main	codechef/feb2020/accending_sort.cpp	/^int main()  {$/;"	f
FORI	codechef/feb2020/no_change_required.cpp	3;"	d	file:
ll	codechef/feb2020/no_change_required.cpp	/^typedef long long ll;$/;"	t	file:
n	codechef/feb2020/no_change_required.cpp	/^ll n, p;$/;"	v
p	codechef/feb2020/no_change_required.cpp	/^ll n, p;$/;"	v
findCoins	codechef/feb2020/no_change_required.cpp	/^vector<ll> findCoins(vector<ll> v) {$/;"	f
main	codechef/feb2020/no_change_required.cpp	/^int main()  {$/;"	f
FORI	codechef/feb2020/hard_cash.cpp	3;"	d	file:
ll	codechef/feb2020/hard_cash.cpp	/^typedef long long ll;$/;"	t	file:
main	codechef/feb2020/hard_cash.cpp	/^int main()  {$/;"	f
FORI	codechef/DecemberLongChallenge/MaxandElectricalPanel.cpp	4;"	d	file:
FORJ	codechef/DecemberLongChallenge/MaxandElectricalPanel.cpp	5;"	d	file:
FORIMINUS	codechef/DecemberLongChallenge/MaxandElectricalPanel.cpp	7;"	d	file:
FORJMINUS	codechef/DecemberLongChallenge/MaxandElectricalPanel.cpp	8;"	d	file:
ll	codechef/DecemberLongChallenge/MaxandElectricalPanel.cpp	/^typedef long long ll;$/;"	t	file:
divv	codechef/DecemberLongChallenge/MaxandElectricalPanel.cpp	/^int divv=33;$/;"	v
Middle	codechef/DecemberLongChallenge/MaxandElectricalPanel.cpp	/^ll Middle(ll a, ll b) { $/;"	f
main	codechef/DecemberLongChallenge/MaxandElectricalPanel.cpp	/^int main() {$/;"	f
ll	codechef/DecemberLongChallenge/ChefandInteractiveXOR.cpp	/^typedef long long ll;$/;"	t	file:
FORI	codechef/DecemberLongChallenge/ChefandInteractiveXOR.cpp	5;"	d	file:
FORJ	codechef/DecemberLongChallenge/ChefandInteractiveXOR.cpp	6;"	d	file:
FORIMINUS	codechef/DecemberLongChallenge/ChefandInteractiveXOR.cpp	8;"	d	file:
FORJMINUS	codechef/DecemberLongChallenge/ChefandInteractiveXOR.cpp	9;"	d	file:
for4	codechef/DecemberLongChallenge/ChefandInteractiveXOR.cpp	/^void for4(ll a[], ll s) {$/;"	f
for5	codechef/DecemberLongChallenge/ChefandInteractiveXOR.cpp	/^void for5(ll a[], ll s) {$/;"	f
for7	codechef/DecemberLongChallenge/ChefandInteractiveXOR.cpp	/^void for7(ll a[], ll s) {$/;"	f
main	codechef/DecemberLongChallenge/ChefandInteractiveXOR.cpp	/^int main() {$/;"	f
ll	codechef/DecemberLongChallenge/DifferentNeighbours.cpp	/^typedef long long ll;$/;"	t	file:
fori	codechef/DecemberLongChallenge/DifferentNeighbours.cpp	4;"	d	file:
main	codechef/DecemberLongChallenge/DifferentNeighbours.cpp	/^int main() {$/;"	f
ll	codechef/DecemberLongChallenge/ChefandModuloGame.cpp	/^typedef long long ll;$/;"	t	file:
FORI	codechef/DecemberLongChallenge/ChefandModuloGame.cpp	4;"	d	file:
main	codechef/DecemberLongChallenge/ChefandModuloGame.cpp	/^int main() {$/;"	f
ll	codechef/DecemberLongChallenge/ChefandModuloGame2.cpp	/^typedef long long ll;$/;"	t	file:
main	codechef/DecemberLongChallenge/ChefandModuloGame2.cpp	/^int main() {$/;"	f
FORI	codechef/DecemberLongChallenge/ChefandInteractiveXOR2.cpp	4;"	d	file:
FORJ	codechef/DecemberLongChallenge/ChefandInteractiveXOR2.cpp	5;"	d	file:
FORIMINUS	codechef/DecemberLongChallenge/ChefandInteractiveXOR2.cpp	7;"	d	file:
FORJMINUS	codechef/DecemberLongChallenge/ChefandInteractiveXOR2.cpp	8;"	d	file:
ll	codechef/DecemberLongChallenge/ChefandInteractiveXOR2.cpp	/^typedef long long ll;$/;"	t	file:
main	codechef/DecemberLongChallenge/ChefandInteractiveXOR2.cpp	/^int main() {$/;"	f
printArr	codechef/BadShuffle.cpp	/^void printArr(int *A,int N) {$/;"	f
swap	codechef/BadShuffle.cpp	/^void swap(int arr[],int p1,int p2) {$/;"	f
revSwapArray	codechef/BadShuffle.cpp	/^void revSwapArray(int *A,int s,int e) {$/;"	f
swapArray	codechef/BadShuffle.cpp	/^void swapArray(int *A,int s,int e) {$/;"	f
main	codechef/BadShuffle.cpp	/^int main() {$/;"	f
ll	codechef/AMCICPC/wordgridAll.cpp	87;"	d	file:
pb	codechef/AMCICPC/wordgridAll.cpp	88;"	d	file:
mp	codechef/AMCICPC/wordgridAll.cpp	89;"	d	file:
pii	codechef/AMCICPC/wordgridAll.cpp	90;"	d	file:
vi	codechef/AMCICPC/wordgridAll.cpp	91;"	d	file:
all	codechef/AMCICPC/wordgridAll.cpp	92;"	d	file:
F	codechef/AMCICPC/wordgridAll.cpp	93;"	d	file:
S	codechef/AMCICPC/wordgridAll.cpp	94;"	d	file:
sz	codechef/AMCICPC/wordgridAll.cpp	95;"	d	file:
hell	codechef/AMCICPC/wordgridAll.cpp	96;"	d	file:
endl	codechef/AMCICPC/wordgridAll.cpp	97;"	d	file:
rep	codechef/AMCICPC/wordgridAll.cpp	98;"	d	file:
to_string	codechef/AMCICPC/wordgridAll.cpp	/^string to_string(string s) {$/;"	f
to_string	codechef/AMCICPC/wordgridAll.cpp	/^string to_string(const char* s) {$/;"	f
to_string	codechef/AMCICPC/wordgridAll.cpp	/^string to_string(bool b) {$/;"	f
to_string	codechef/AMCICPC/wordgridAll.cpp	/^string to_string(pair<A, B> p) {$/;"	f
to_string	codechef/AMCICPC/wordgridAll.cpp	/^string to_string(A v) {$/;"	f
debug_out	codechef/AMCICPC/wordgridAll.cpp	/^void debug_out() { cerr << endl; }$/;"	f
debug_out	codechef/AMCICPC/wordgridAll.cpp	/^void debug_out(Head H, Tail... T) {$/;"	f
operator >>	codechef/AMCICPC/wordgridAll.cpp	/^istream& operator>>(istream& input,vi& x){$/;"	f
operator >>	codechef/AMCICPC/wordgridAll.cpp	/^istream& operator>>(istream& input,pii& x){$/;"	f
debug	codechef/AMCICPC/wordgridAll.cpp	154;"	d	file:
debug	codechef/AMCICPC/wordgridAll.cpp	156;"	d	file:
alpha	codechef/AMCICPC/wordgridAll.cpp	/^int alpha[4];$/;"	v
beta	codechef/AMCICPC/wordgridAll.cpp	/^int beta[4];$/;"	v
beta2	codechef/AMCICPC/wordgridAll.cpp	/^int beta2[4];$/;"	v
alpha2	codechef/AMCICPC/wordgridAll.cpp	/^int alpha2[4];$/;"	v
grid	codechef/AMCICPC/wordgridAll.cpp	/^string grid[4];$/;"	v
best	codechef/AMCICPC/wordgridAll.cpp	/^vector<string>best;$/;"	v
takemin	codechef/AMCICPC/wordgridAll.cpp	/^void takemin(){$/;"	f
gamma	codechef/AMCICPC/wordgridAll.cpp	185;"	d	file:
zeta	codechef/AMCICPC/wordgridAll.cpp	/^int zeta[4];$/;"	v
gamma	codechef/AMCICPC/wordgridAll.cpp	/^int gamma[4];$/;"	v
nongamma	codechef/AMCICPC/wordgridAll.cpp	/^int nongamma[4];$/;"	v
solve	codechef/AMCICPC/wordgridAll.cpp	/^void solve(){$/;"	f
main	codechef/AMCICPC/wordgridAll.cpp	/^int main(){$/;"	f
t	codechef/AMCICPC/wordgridAll.cpp	/^int t, n;$/;"	v
n	codechef/AMCICPC/wordgridAll.cpp	/^int t, n;$/;"	v
s	codechef/AMCICPC/wordgridAll.cpp	/^string s, s2, ans, temp;$/;"	v
s2	codechef/AMCICPC/wordgridAll.cpp	/^string s, s2, ans, temp;$/;"	v
ans	codechef/AMCICPC/wordgridAll.cpp	/^string s, s2, ans, temp;$/;"	v
temp	codechef/AMCICPC/wordgridAll.cpp	/^string s, s2, ans, temp;$/;"	v
words	codechef/AMCICPC/wordgridAll.cpp	/^set<string> words;$/;"	v
lis	codechef/AMCICPC/wordgridAll.cpp	/^string lis[20];$/;"	v
possible	codechef/AMCICPC/wordgridAll.cpp	/^bool possible(int i, int p, int step) {$/;"	f
change	codechef/AMCICPC/wordgridAll.cpp	/^void change(int i, int p, int step, pair<int,  char> changes[]) {$/;"	f
revert	codechef/AMCICPC/wordgridAll.cpp	/^void revert(pair<int,  char> changes[]) {$/;"	f
solve	codechef/AMCICPC/wordgridAll.cpp	/^void solve(int i) {$/;"	f
main	codechef/AMCICPC/wordgridAll.cpp	/^int main() {$/;"	f
t	codechef/AMCICPC/abcd.py	/^t = int(input())$/;"	v
inp	codechef/AMCICPC/abcd.py	/^    inp = input()$/;"	v
n	codechef/AMCICPC/abcd.py	/^    n = len(inp)$/;"	v
arr	codechef/AMCICPC/abcd.py	/^    arr = [0 for i in range(n)]$/;"	v
k	codechef/AMCICPC/abcd.py	/^            k = int(inp[x])$/;"	v
flag	codechef/AMCICPC/abcd.py	/^    flag = 1$/;"	v
flag	codechef/AMCICPC/abcd.py	/^            flag = 2$/;"	v
FORI	codechef/AMCICPC/question.cpp	4;"	d	file:
FORJ	codechef/AMCICPC/question.cpp	5;"	d	file:
FORIMINUS	codechef/AMCICPC/question.cpp	7;"	d	file:
FORJMINUS	codechef/AMCICPC/question.cpp	8;"	d	file:
ll	codechef/AMCICPC/question.cpp	/^typedef long long ll;$/;"	t	file:
countReservior	codechef/AMCICPC/question.cpp	/^int countReservior() {$/;"	f
main	codechef/AMCICPC/question.cpp	/^int main() {$/;"	f
oper1	codechef/AMCICPC/dklf.py	/^def oper1(l,r):$/;"	f
oper2	codechef/AMCICPC/dklf.py	/^def oper2(r):$/;"	f
oper3	codechef/AMCICPC/dklf.py	/^def oper3(a,b,c,d):$/;"	f
u2	codechef/AMCICPC/dklf.py	/^u2 = list(map(int,input().split()))$/;"	v
l2	codechef/AMCICPC/dklf.py	/^l2 = list(map(int,input().split()))$/;"	v
u1	codechef/AMCICPC/dklf.py	/^u1 = [1 for iii in range(n)]$/;"	v
l1	codechef/AMCICPC/dklf.py	/^l1 = [-1 for ii in range(n)]$/;"	v
cas	codechef/AMCICPC/dklf.py	/^    cas = list(map(int,input().split()))$/;"	v
FORI	codechef/AMCICPC/question4.cpp	4;"	d	file:
FORJ	codechef/AMCICPC/question4.cpp	5;"	d	file:
FORIMINUS	codechef/AMCICPC/question4.cpp	7;"	d	file:
FORJMINUS	codechef/AMCICPC/question4.cpp	8;"	d	file:
ll	codechef/AMCICPC/question4.cpp	/^typedef long long ll;$/;"	t	file:
countReservior	codechef/AMCICPC/question4.cpp	/^int countReservior() {$/;"	f
main	codechef/AMCICPC/question4.cpp	/^int main() {$/;"	f
FORI	codechef/AMCICPC/question3.cpp	4;"	d	file:
FORJ	codechef/AMCICPC/question3.cpp	5;"	d	file:
FORIMINUS	codechef/AMCICPC/question3.cpp	7;"	d	file:
FORJMINUS	codechef/AMCICPC/question3.cpp	8;"	d	file:
ll	codechef/AMCICPC/question3.cpp	/^typedef long long ll;$/;"	t	file:
countReservior	codechef/AMCICPC/question3.cpp	/^int countReservior() {$/;"	f
main	codechef/AMCICPC/question3.cpp	/^int main() {$/;"	f
FORI	codechef/AMCICPC/question5.cpp	4;"	d	file:
FORJ	codechef/AMCICPC/question5.cpp	5;"	d	file:
FORIMINUS	codechef/AMCICPC/question5.cpp	7;"	d	file:
FORJMINUS	codechef/AMCICPC/question5.cpp	8;"	d	file:
ll	codechef/AMCICPC/question5.cpp	/^typedef long long ll;$/;"	t	file:
countReservior	codechef/AMCICPC/question5.cpp	/^int countReservior() {$/;"	f
main	codechef/AMCICPC/question5.cpp	/^int main() {$/;"	f
FORI	codechef/AMCICPC/wordgrid.cpp	4;"	d	file:
FORJ	codechef/AMCICPC/wordgrid.cpp	5;"	d	file:
FORIMINUS	codechef/AMCICPC/wordgrid.cpp	7;"	d	file:
FORJMINUS	codechef/AMCICPC/wordgrid.cpp	8;"	d	file:
ll	codechef/AMCICPC/wordgrid.cpp	/^typedef long long ll;$/;"	t	file:
global	codechef/AMCICPC/wordgrid.cpp	/^vector<vector<string>> global;$/;"	v
SIZE	codechef/AMCICPC/wordgrid.cpp	/^const int SIZE = 4;$/;"	v
returnMatrix	codechef/AMCICPC/wordgrid.cpp	/^vector<string> returnMatrix;$/;"	v
split	codechef/AMCICPC/wordgrid.cpp	/^vector<string> split(const string &s, char delim) {$/;"	f
printMatrix	codechef/AMCICPC/wordgrid.cpp	/^void printMatrix(vector<string>& matrix) { $/;"	f
checkHorizontal	codechef/AMCICPC/wordgrid.cpp	/^vector<string> checkHorizontal(int x, int y, vector<string> matrix, string currentword) {$/;"	f
checkHorizontalReverse	codechef/AMCICPC/wordgrid.cpp	/^vector<string> checkHorizontalReverse(int x, int y, vector<string> matrix, string currentword) {$/;"	f
checkVertical	codechef/AMCICPC/wordgrid.cpp	/^vector<string> checkVertical(int x, int y, vector<string> matrix, string currentword) {$/;"	f
checkVerticalReverse	codechef/AMCICPC/wordgrid.cpp	/^vector<string> checkVerticalReverse(int x, int y, vector<string> matrix, string currentword) {$/;"	f
recuresAndFind	codechef/AMCICPC/wordgrid.cpp	/^void recuresAndFind(vector<string> crossword, vector<string> words,int index) {$/;"	f
buildGrid	codechef/AMCICPC/wordgrid.cpp	/^void buildGrid(vector<string> word) {$/;"	f
main	codechef/AMCICPC/wordgrid.cpp	/^int main()$/;"	f
FORI	codechef/MAY20B/TripleSort.cpp	3;"	d	file:
ll	codechef/MAY20B/TripleSort.cpp	/^typedef long long ll;$/;"	t	file:
global2s	codechef/MAY20B/TripleSort.cpp	/^vector<vector<ll>> global2s;$/;"	v
operateOnChain	codechef/MAY20B/TripleSort.cpp	/^vector<vector<ll>> operateOnChain(vector<ll> chain) {$/;"	f
globls2sList	codechef/MAY20B/TripleSort.cpp	/^vector<vector<ll>> globls2sList() {$/;"	f
solveChain	codechef/MAY20B/TripleSort.cpp	/^pair<vector<vector<ll>>, ll> solveChain(vector<ll> permut, ll k) {$/;"	f
printTripleList	codechef/MAY20B/TripleSort.cpp	/^void printTripleList(vector<vector<ll>> tripleList) {$/;"	f
main	codechef/MAY20B/TripleSort.cpp	/^int main()  {$/;"	f
ll	codechef/MAY20B/ChefandBitwiseProductExample.cpp	/^typedef unsigned long long ll;$/;"	t	file:
FORI	codechef/MAY20B/ChefandBitwiseProductExample.cpp	4;"	d	file:
forirev	codechef/MAY20B/ChefandBitwiseProductExample.cpp	5;"	d	file:
DIG_L	codechef/MAY20B/ChefandBitwiseProductExample.cpp	/^const ll DIG_L = numeric_limits<ll>::digits;$/;"	v
func	codechef/MAY20B/ChefandBitwiseProductExample.cpp	/^ll func(ll x, ll y, ll z) { return (x & z)*(y & z); }$/;"	f
find_max	codechef/MAY20B/ChefandBitwiseProductExample.cpp	/^ll find_max(ll X, ll Y, ll L, ll R) {$/;"	f
brouteForceMax	codechef/MAY20B/ChefandBitwiseProductExample.cpp	/^ll brouteForceMax(ll x, ll y, ll l, ll r) {$/;"	f
main	codechef/MAY20B/ChefandBitwiseProductExample.cpp	/^int main()  {$/;"	f
FORI	codechef/MAY20B/IsolationCenters.cpp	3;"	d	file:
ll	codechef/MAY20B/IsolationCenters.cpp	/^typedef long long ll;$/;"	t	file:
createMap	codechef/MAY20B/IsolationCenters.cpp	/^unordered_map<char, ll> createMap(string s) {$/;"	f
findQuery	codechef/MAY20B/IsolationCenters.cpp	/^ll findQuery(unordered_map<char, ll> mp, ll t) {$/;"	f
main	codechef/MAY20B/IsolationCenters.cpp	/^int main()  {$/;"	f
FORI	codechef/MAY20B/CoronavirusSpread.cpp	3;"	d	file:
ll	codechef/MAY20B/CoronavirusSpread.cpp	/^typedef long long ll;$/;"	t	file:
global2s	codechef/MAY20B/CoronavirusSpread.cpp	/^vector<vector<ll>> global2s;$/;"	v
main	codechef/MAY20B/CoronavirusSpread.cpp	/^int main()  {$/;"	f
ll	codechef/MAY20B/ChefandBitwiseProduct.cpp	/^typedef unsigned long ll;$/;"	t	file:
FORI	codechef/MAY20B/ChefandBitwiseProduct.cpp	4;"	d	file:
forirev	codechef/MAY20B/ChefandBitwiseProduct.cpp	5;"	d	file:
DIG_L	codechef/MAY20B/ChefandBitwiseProduct.cpp	/^const ll DIG_L = numeric_limits<ll>::digits;$/;"	v
func	codechef/MAY20B/ChefandBitwiseProduct.cpp	/^ll func(ll x, ll y, ll z) { return (x & z)*(y & z); }$/;"	f
brouteForceMax	codechef/MAY20B/ChefandBitwiseProduct.cpp	/^ll brouteForceMax(ll x, ll y, ll l, ll r) {$/;"	f
find_max	codechef/MAY20B/ChefandBitwiseProduct.cpp	/^ll find_max(ll X, ll Y, ll L, ll R) {$/;"	f
main	codechef/MAY20B/ChefandBitwiseProduct.cpp	/^int main()  {$/;"	f
main	codechef/WarofXORs.cpp	/^int main() {$/;"	f
ll	codechef/snackdown19/QualifyingtoPreElimination.cpp	/^typedef long long ll;$/;"	t	file:
main	codechef/snackdown19/QualifyingtoPreElimination.cpp	/^int main()$/;"	f
ll	codechef/snackdown19/CheflandandAverageDistance.cpp	/^typedef long long ll;$/;"	t	file:
main	codechef/snackdown19/CheflandandAverageDistance.cpp	/^int main() {$/;"	f
ll	codechef/snackdown19/triel.cpp	/^typedef long long ll;$/;"	t	file:
summ	codechef/snackdown19/triel.cpp	/^vector<int> summ,sum, A = { 6, 10, 14, 15, 21, 22, 26, 33, 34, 35, 38, 39, 46, 51, 55, 57, 58, 62, 65, 69, 74, 77, 82, 85, 86, 87, 91, 93, 94, 95, 106, 111, 115, 118, 119, 122, 123, 129, 133, 134, 141, 142, 143, 145, 146, 155, 158, 159, 161, 166, 177, 178, 183, 185, 187, 194};$/;"	v
sum	codechef/snackdown19/triel.cpp	/^vector<int> summ,sum, A = { 6, 10, 14, 15, 21, 22, 26, 33, 34, 35, 38, 39, 46, 51, 55, 57, 58, 62, 65, 69, 74, 77, 82, 85, 86, 87, 91, 93, 94, 95, 106, 111, 115, 118, 119, 122, 123, 129, 133, 134, 141, 142, 143, 145, 146, 155, 158, 159, 161, 166, 177, 178, 183, 185, 187, 194};$/;"	v
A	codechef/snackdown19/triel.cpp	/^vector<int> summ,sum, A = { 6, 10, 14, 15, 21, 22, 26, 33, 34, 35, 38, 39, 46, 51, 55, 57, 58, 62, 65, 69, 74, 77, 82, 85, 86, 87, 91, 93, 94, 95, 106, 111, 115, 118, 119, 122, 123, 129, 133, 134, 141, 142, 143, 145, 146, 155, 158, 159, 161, 166, 177, 178, 183, 185, 187, 194};$/;"	v
main	codechef/snackdown19/triel.cpp	/^int main()$/;"	f
main	codechef/snackdown19/ChefandStrangeAddition2.cpp	/^int main()$/;"	f
ll	codechef/snackdown19/ChefandTyping.cpp	/^typedef long long ll;$/;"	t	file:
main	codechef/snackdown19/ChefandTyping.cpp	/^int main()$/;"	f
ll	codechef/snackdown19/ChefandSemiPrimes.cpp	/^typedef long long ll;$/;"	t	file:
main	codechef/snackdown19/ChefandSemiPrimes.cpp	/^int main()$/;"	f
ll	codechef/snackdown19/ChefandOperations.cpp	/^typedef long long ll;$/;"	t	file:
main	codechef/snackdown19/ChefandOperations.cpp	/^int main()$/;"	f
ll	codechef/snackdown19/ChefandStrangeAddition.cpp	/^typedef long long ll;$/;"	t	file:
decToBinary	codechef/snackdown19/ChefandStrangeAddition.cpp	/^void decToBinary(int n) $/;"	f
coutbit	codechef/snackdown19/ChefandStrangeAddition.cpp	/^ll coutbit(ll n) { $/;"	f
main	codechef/snackdown19/ChefandStrangeAddition.cpp	/^int main()$/;"	f
ll	codechef/snackdown19/SpreadtheWord.cpp	/^typedef long long ll;$/;"	t	file:
main	codechef/snackdown19/SpreadtheWord.cpp	/^int main()$/;"	f
aaaa	codechef/snackdown19/ChefandPeriodicSequence.java	/^class aaaa {$/;"	c
main	codechef/snackdown19/ChefandPeriodicSequence.java	/^    public static void main(String[] args) {$/;"	m	class:aaaa
printList	codechef/snackdown19/CheflandandAverageDistance.py	/^def printList(L):$/;"	f
makeAllArray	codechef/snackdown19/CheflandandAverageDistance.py	/^def makeAllArray(N, M):$/;"	f
g	codechef/snackdown19/CheflandandAverageDistance.py	/^    g = int(input())$/;"	v
wbm	codechef/snackdown19/CheflandandAverageDistance.py	/^        wbm = input().split()$/;"	v
w	codechef/snackdown19/CheflandandAverageDistance.py	/^        w = int(wbm[0])$/;"	v
b	codechef/snackdown19/CheflandandAverageDistance.py	/^        b = int(wbm[1])$/;"	v
basicclass	codechef/snackdown19/snackdown19b/ChefandSequence.java	/^package basicclass;$/;"	p
BasicClass	codechef/snackdown19/snackdown19b/ChefandSequence.java	/^public class BasicClass {$/;"	c
Reader	codechef/snackdown19/snackdown19b/ChefandSequence.java	/^  static class Reader $/;"	c	class:BasicClass
BUFFER_SIZE	codechef/snackdown19/snackdown19b/ChefandSequence.java	/^        final private int BUFFER_SIZE = 1 << 16; $/;"	f	class:BasicClass.Reader	file:
din	codechef/snackdown19/snackdown19b/ChefandSequence.java	/^        private DataInputStream din; $/;"	f	class:BasicClass.Reader	file:
buffer	codechef/snackdown19/snackdown19b/ChefandSequence.java	/^        private byte[] buffer; $/;"	f	class:BasicClass.Reader	file:
bufferPointer	codechef/snackdown19/snackdown19b/ChefandSequence.java	/^        private int bufferPointer, bytesRead; $/;"	f	class:BasicClass.Reader	file:
bytesRead	codechef/snackdown19/snackdown19b/ChefandSequence.java	/^        private int bufferPointer, bytesRead; $/;"	f	class:BasicClass.Reader	file:
Reader	codechef/snackdown19/snackdown19b/ChefandSequence.java	/^        public Reader() $/;"	m	class:BasicClass.Reader
Reader	codechef/snackdown19/snackdown19b/ChefandSequence.java	/^        public Reader(String file_name) throws IOException $/;"	m	class:BasicClass.Reader
readLine	codechef/snackdown19/snackdown19b/ChefandSequence.java	/^        public String readLine() throws IOException $/;"	m	class:BasicClass.Reader
nextInt	codechef/snackdown19/snackdown19b/ChefandSequence.java	/^        public int nextInt() throws IOException $/;"	m	class:BasicClass.Reader
nextLong	codechef/snackdown19/snackdown19b/ChefandSequence.java	/^        public long nextLong() throws IOException $/;"	m	class:BasicClass.Reader
nextDouble	codechef/snackdown19/snackdown19b/ChefandSequence.java	/^        public double nextDouble() throws IOException $/;"	m	class:BasicClass.Reader
fillBuffer	codechef/snackdown19/snackdown19b/ChefandSequence.java	/^        private void fillBuffer() throws IOException $/;"	m	class:BasicClass.Reader	file:
read	codechef/snackdown19/snackdown19b/ChefandSequence.java	/^        private byte read() throws IOException $/;"	m	class:BasicClass.Reader	file:
close	codechef/snackdown19/snackdown19b/ChefandSequence.java	/^        public void close() throws IOException $/;"	m	class:BasicClass.Reader
main	codechef/snackdown19/snackdown19b/ChefandSequence.java	/^    public static void main(String[] args) throws IOException $/;"	m	class:BasicClass
FORI	codechef/snackdown19/snackdown19b/ChefandKSegments.cpp	4;"	d	file:
FORJ	codechef/snackdown19/snackdown19b/ChefandKSegments.cpp	5;"	d	file:
FORIMINUS	codechef/snackdown19/snackdown19b/ChefandKSegments.cpp	7;"	d	file:
FORJMINUS	codechef/snackdown19/snackdown19b/ChefandKSegments.cpp	8;"	d	file:
ll	codechef/snackdown19/snackdown19b/ChefandKSegments.cpp	/^typedef long long ll;$/;"	t	file:
main	codechef/snackdown19/snackdown19b/ChefandKSegments.cpp	/^int main() {$/;"	f
MAXPRODU	codechef/snackdown19/snackdown19b/MaximizeProduct.java	/^class MAXPRODU {$/;"	c
main	codechef/snackdown19/snackdown19b/MaximizeProduct.java	/^    public static void main(String[] args) throws IOException {$/;"	m	class:MAXPRODU
basicclass	codechef/snackdown19/snackdown19b/ChefandSnackDown.java	/^package basicclass;$/;"	p
BasicClass	codechef/snackdown19/snackdown19b/ChefandSnackDown.java	/^public class BasicClass {$/;"	c
Reader	codechef/snackdown19/snackdown19b/ChefandSnackDown.java	/^  static class Reader $/;"	c	class:BasicClass
BUFFER_SIZE	codechef/snackdown19/snackdown19b/ChefandSnackDown.java	/^        final private int BUFFER_SIZE = 1 << 16; $/;"	f	class:BasicClass.Reader	file:
din	codechef/snackdown19/snackdown19b/ChefandSnackDown.java	/^        private DataInputStream din; $/;"	f	class:BasicClass.Reader	file:
buffer	codechef/snackdown19/snackdown19b/ChefandSnackDown.java	/^        private byte[] buffer; $/;"	f	class:BasicClass.Reader	file:
bufferPointer	codechef/snackdown19/snackdown19b/ChefandSnackDown.java	/^        private int bufferPointer, bytesRead; $/;"	f	class:BasicClass.Reader	file:
bytesRead	codechef/snackdown19/snackdown19b/ChefandSnackDown.java	/^        private int bufferPointer, bytesRead; $/;"	f	class:BasicClass.Reader	file:
Reader	codechef/snackdown19/snackdown19b/ChefandSnackDown.java	/^        public Reader() $/;"	m	class:BasicClass.Reader
Reader	codechef/snackdown19/snackdown19b/ChefandSnackDown.java	/^        public Reader(String file_name) throws IOException $/;"	m	class:BasicClass.Reader
readLine	codechef/snackdown19/snackdown19b/ChefandSnackDown.java	/^        public String readLine() throws IOException $/;"	m	class:BasicClass.Reader
nextInt	codechef/snackdown19/snackdown19b/ChefandSnackDown.java	/^        public int nextInt() throws IOException $/;"	m	class:BasicClass.Reader
nextLong	codechef/snackdown19/snackdown19b/ChefandSnackDown.java	/^        public long nextLong() throws IOException $/;"	m	class:BasicClass.Reader
nextDouble	codechef/snackdown19/snackdown19b/ChefandSnackDown.java	/^        public double nextDouble() throws IOException $/;"	m	class:BasicClass.Reader
fillBuffer	codechef/snackdown19/snackdown19b/ChefandSnackDown.java	/^        private void fillBuffer() throws IOException $/;"	m	class:BasicClass.Reader	file:
read	codechef/snackdown19/snackdown19b/ChefandSnackDown.java	/^        private byte read() throws IOException $/;"	m	class:BasicClass.Reader	file:
close	codechef/snackdown19/snackdown19b/ChefandSnackDown.java	/^        public void close() throws IOException $/;"	m	class:BasicClass.Reader
main	codechef/snackdown19/snackdown19b/ChefandSnackDown.java	/^    public static void main(String[] args) throws IOException $/;"	m	class:BasicClass
QUEUE2	codechef/snackdown19/snackdown19b/WaitinginQueue.java	/^class QUEUE2 {$/;"	c
sc	codechef/snackdown19/snackdown19b/WaitinginQueue.java	/^    static Scanner sc = new Scanner(System.in);$/;"	f	class:QUEUE2
main	codechef/snackdown19/snackdown19b/WaitinginQueue.java	/^    public static void main(String[] args) throws IOException {$/;"	m	class:QUEUE2
main	codechef/ANDSquareSubsegments.cpp	/^int main() {$/;"	f
main	codechef/OctoberChallenge/ByteToBit.cpp	/^int main()$/;"	f
ll	codechef/OctoberChallenge/MinimumDigitsum.cpp	/^typedef long long ll;$/;"	t	file:
min_num	codechef/OctoberChallenge/MinimumDigitsum.cpp	/^ll *min_num, *attempt;$/;"	v
attempt	codechef/OctoberChallenge/MinimumDigitsum.cpp	/^ll *min_num, *attempt;$/;"	v
digitSum	codechef/OctoberChallenge/MinimumDigitsum.cpp	/^ll digitSum(ll n) $/;"	f
minimumDigitsum	codechef/OctoberChallenge/MinimumDigitsum.cpp	/^void minimumDigitsum(ll N, ll D,int this_attempt) {$/;"	f
main	codechef/OctoberChallenge/MinimumDigitsum.cpp	/^int main()$/;"	f
ll	codechef/OctoberChallenge/ChefandSurpriseChessboard.cpp	/^typedef long long ll;$/;"	t	file:
A	codechef/OctoberChallenge/ChefandSurpriseChessboard.cpp	/^vector<string> A;$/;"	v
Falsy	codechef/OctoberChallenge/ChefandSurpriseChessboard.cpp	/^vector<vector<int>> Falsy;$/;"	v
Wrong	codechef/OctoberChallenge/ChefandSurpriseChessboard.cpp	/^vector<vector<int>> Wrong;$/;"	v
N	codechef/OctoberChallenge/ChefandSurpriseChessboard.cpp	/^int N, M, Max=1;$/;"	v
M	codechef/OctoberChallenge/ChefandSurpriseChessboard.cpp	/^int N, M, Max=1;$/;"	v
Max	codechef/OctoberChallenge/ChefandSurpriseChessboard.cpp	/^int N, M, Max=1;$/;"	v
findMaxSubBoard	codechef/OctoberChallenge/ChefandSurpriseChessboard.cpp	/^void findMaxSubBoard() {$/;"	f
reverseFalsy	codechef/OctoberChallenge/ChefandSurpriseChessboard.cpp	/^void reverseFalsy() {$/;"	f
main	codechef/OctoberChallenge/ChefandSurpriseChessboard.cpp	/^int main()$/;"	f
ll	codechef/OctoberChallenge/experiment.cpp	/^typedef long long ll;$/;"	t	file:
makePair	codechef/OctoberChallenge/experiment.cpp	/^typedef pair< const double, list< double > > makePair;$/;"	t	file:
N	codechef/OctoberChallenge/experiment.cpp	/^int N, Q;$/;"	v
Q	codechef/OctoberChallenge/experiment.cpp	/^int N, Q;$/;"	v
MapOfLists	codechef/OctoberChallenge/experiment.cpp	/^map< const double, list< double > > MapOfLists = {$/;"	v
printMap	codechef/OctoberChallenge/experiment.cpp	/^void printMap() {$/;"	f
main	codechef/OctoberChallenge/experiment.cpp	/^int main()$/;"	f
main	codechef/OctoberChallenge/AppyandBalloons.cpp	/^int main()$/;"	f
main	codechef/OctoberChallenge/ChefAndServes.cpp	/^int main()$/;"	f
ll	codechef/OctoberChallenge/ChefandCircleSimple.cpp	/^typedef long long ll;$/;"	t	file:
MIN	codechef/OctoberChallenge/ChefandCircleSimple.cpp	/^vector<double> MIN, MAX;$/;"	v
MAX	codechef/OctoberChallenge/ChefandCircleSimple.cpp	/^vector<double> MIN, MAX;$/;"	v
N	codechef/OctoberChallenge/ChefandCircleSimple.cpp	/^int N, Q;$/;"	v
Q	codechef/OctoberChallenge/ChefandCircleSimple.cpp	/^int N, Q;$/;"	v
CalMaxAndMin	codechef/OctoberChallenge/ChefandCircleSimple.cpp	/^void CalMaxAndMin(double x, double y, double r, double x1, double y1, double r1) {$/;"	f
queryMapOfList	codechef/OctoberChallenge/ChefandCircleSimple.cpp	/^long long queryMapOfList(double q) {$/;"	f
main	codechef/OctoberChallenge/ChefandCircleSimple.cpp	/^int main()$/;"	f
FORI	codechef/OctoberChallenge/ChefandCircles.cpp	2;"	d	file:
ll	codechef/OctoberChallenge/ChefandCircles.cpp	/^typedef long long ll;$/;"	t	file:
KK	codechef/OctoberChallenge/ChefandCircles.cpp	/^const int KK = 1000000;$/;"	v
N	codechef/OctoberChallenge/ChefandCircles.cpp	/^int N, Q;$/;"	v
Q	codechef/OctoberChallenge/ChefandCircles.cpp	/^int N, Q;$/;"	v
CalMaxAndMin	codechef/OctoberChallenge/ChefandCircles.cpp	/^void CalMaxAndMin(double x, double y, double r, double x1, double y1, double r1, int query[]) {$/;"	f
main	codechef/OctoberChallenge/ChefandCircles.cpp	/^int main()$/;"	f
ll	codechef/april_lunchtime/chef_in_fantacy_legue.cpp	/^typedef long long ll;$/;"	t	file:
sort_gapped	codechef/april_lunchtime/chef_in_fantacy_legue.cpp	/^void sort_gapped(ll start, ll g, vector<ll>& a) {$/;"	f
is_sorted	codechef/april_lunchtime/chef_in_fantacy_legue.cpp	/^string is_sorted(vector<ll>& a) {$/;"	f
main	codechef/april_lunchtime/chef_in_fantacy_legue.cpp	/^int main() {$/;"	f
ll	codechef/april_lunchtime/another_birthday_present.cpp	/^typedef long long ll;$/;"	t	file:
sort_gapped	codechef/april_lunchtime/another_birthday_present.cpp	/^void sort_gapped(ll start, ll g, vector<ll>& a) {$/;"	f
is_sorted	codechef/april_lunchtime/another_birthday_present.cpp	/^string is_sorted(vector<ll>& a) {$/;"	f
main	codechef/april_lunchtime/another_birthday_present.cpp	/^int main() {$/;"	f
FORI	codechef/OctoberLunchtime/WeirdQuestion.cpp	4;"	d	file:
FORJ	codechef/OctoberLunchtime/WeirdQuestion.cpp	5;"	d	file:
FORIMINUS	codechef/OctoberLunchtime/WeirdQuestion.cpp	7;"	d	file:
FORJMINUS	codechef/OctoberLunchtime/WeirdQuestion.cpp	8;"	d	file:
ll	codechef/OctoberLunchtime/WeirdQuestion.cpp	/^typedef long long ll;$/;"	t	file:
main	codechef/OctoberLunchtime/WeirdQuestion.cpp	/^int main() {$/;"	f
FORI	codechef/OctoberLunchtime/ColoringtheGrid.cpp	4;"	d	file:
FORJ	codechef/OctoberLunchtime/ColoringtheGrid.cpp	5;"	d	file:
FORIMINUS	codechef/OctoberLunchtime/ColoringtheGrid.cpp	7;"	d	file:
FORJMINUS	codechef/OctoberLunchtime/ColoringtheGrid.cpp	8;"	d	file:
ll	codechef/OctoberLunchtime/ColoringtheGrid.cpp	/^typedef long long ll;$/;"	t	file:
main	codechef/OctoberLunchtime/ColoringtheGrid.cpp	/^int main() {$/;"	f
FORI	codechef/OctoberLunchtime/ThreeFriends.cpp	4;"	d	file:
FORJ	codechef/OctoberLunchtime/ThreeFriends.cpp	5;"	d	file:
FORIMINUS	codechef/OctoberLunchtime/ThreeFriends.cpp	7;"	d	file:
FORJMINUS	codechef/OctoberLunchtime/ThreeFriends.cpp	8;"	d	file:
ll	codechef/OctoberLunchtime/ThreeFriends.cpp	/^typedef long long ll;$/;"	t	file:
main	codechef/OctoberLunchtime/ThreeFriends.cpp	/^int main() {$/;"	f
MAXS	Aho-Corasick.cpp	/^const int MAXS = 500;$/;"	v
MAXC	Aho-Corasick.cpp	/^const int MAXC = 26;$/;"	v
out	Aho-Corasick.cpp	/^int out[MAXS];$/;"	v
f	Aho-Corasick.cpp	/^int f[MAXS];$/;"	v
g	Aho-Corasick.cpp	/^int g[MAXS][MAXC];$/;"	v
buildMatchingMachine	Aho-Corasick.cpp	/^int buildMatchingMachine(string arr[], int k)$/;"	f
findNextState	Aho-Corasick.cpp	/^int findNextState(int currentState, char nextInput)$/;"	f
searchWords	Aho-Corasick.cpp	/^void searchWords(string arr[], int k, string text)$/;"	f
main	Aho-Corasick.cpp	/^int main()$/;"	f
competative-and-DS	README.md	/^# competative-and-DS$/;"	h
